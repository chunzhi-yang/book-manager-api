apply plugin: 'java'
apply plugin: 'war' //用来生成war
apply plugin: 'eclipse-wtp' //用来生成Eclipseweb项目的插件（web-tool-platform）
version = '1.0.0' //property
 
// Uses JDK 7
sourceCompatibility = 1.7
targetCompatibility = 1.7
 
 configurations {
    mybatisGenerator
}
 
repositories {
	mavenCentral()
		maven { url 'http://maven.oschina.net/content/groups/public/' }
}
 
//Project dependencies
dependencies {
	
	 
	compile 'com.alibaba:fastjson:1.2.28'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.7.3'
	compile 'junit:junit:4.12'
	compile 'org.apache.tomcat:tomcat-servlet-api:8.0.24'  
	
	compile 'org.springframework:spring-beans:4.2.5.RELEASE'
	compile 'org.springframework:spring-jdbc:4.2.5.RELEASE'
	compile 'org.springframework:spring-web:4.2.5.RELEASE' 
	compile 'org.springframework:spring-tx:4.2.5.RELEASE'
	compile 'org.springframework:spring-webmvc:4.2.5.RELEASE'
    compile 'org.springframework:spring-orm:4.2.5.RELEASE'
    compile 'org.springframework:spring-context-support:4.2.5.RELEASE' 	
	compile 'org.springframework:spring-test:4.2.5.RELEASE'  
	
	compile 'mysql:mysql-connector-java:5.1.36'	
	compile 'org.mybatis:mybatis-spring:1.2.3'
	compile 'org.mybatis:mybatis:3.3.0' 
    compile 'tk.mybatis:mapper:3.4.0' 
	
    compile 'org.aspectj:aspectjweaver:1.8.9'
    compile 'org.bouncycastle:bcprov-jdk15on:1.56'
    compile 'org.slf4j:slf4j-log4j12:1.7.21' 
	compile 'org.apache.shiro:shiro-spring:1.3.0'
	compile 'org.apache.shiro:shiro-core:1.3.0'
	compile 'org.apache.shiro:shiro-web:1.3.0' 
	compile 'org.apache.shiro:shiro-ehcache:1.3.0' 	
	
	compile 'commons-dbcp:commons-dbcp:1.4'
	compile 'commons-fileupload:commons-fileupload:1.3.1'
	compile 'commons-lang:commons-lang:2.6'
	compile 'commons-io:commons-io:2.2'
	compile 'commons-collections:commons-collections:3.2.1'
	compile 'commons-codec:commons-codec:1.10'	
	
	compile group: 'net.sf.json-lib', name: 'json-lib', version: '2.4',classifier:'jdk15'
	compile group: 'net.sf.dozer', name: 'dozer', version: '5.5.1'
	 
	providedCompile 'javax.servlet:servlet-api:2.5'
	
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.38'
    mybatisGenerator 'tk.mybatis:mapper:3.4.0'
}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/jdbc.properties").withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties;
}
task mybatisGenerate << {
    def prop = getDbProperties()

    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = prop.getProperty('driver')
    ant.properties['connectionURL'] = prop.getProperty('url')
    ant.properties['userId'] = prop.getProperty('username')
    ant.properties['password'] = prop.getProperty('password')
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = this.modelPackage
    ant.properties['mapperPackage'] = this.mapperPackage
    ant.properties['sqlMapperPackage'] = this.sqlMapperPackage

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/generator-config.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')

        }
    }
}